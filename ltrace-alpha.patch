diff -Nur ltrace-0.3.31.x/display_args.c ltrace-0.3.31/display_args.c
--- ltrace-0.3.31.x/display_args.c	Thu Nov 20 10:27:37 2003
+++ ltrace-0.3.31/display_args.c	Thu Nov 20 16:11:39 2003
@@ -39,7 +39,7 @@
 			if (!arg) {
 				return fprintf(output, "NULL");
 			} else {
-				return fprintf(output, "0x%08x", (unsigned)arg);
+				return fprintf(output, "0x%8p", (void*)arg);
 			}
 		case ARGTYPE_FORMAT:
 			return display_format(type, proc, arg_num);
diff -Nur ltrace-0.3.31.x/elf.c ltrace-0.3.31/elf.c
--- ltrace-0.3.31.x/elf.c	Thu Nov 20 10:27:37 2003
+++ ltrace-0.3.31/elf.c	Thu Nov 20 15:12:59 2003
@@ -62,7 +62,7 @@
 		);
 		exit(1);
 	}
-	if (sbuf.st_size < sizeof(Elf32_Ehdr)) {
+	if (sbuf.st_size < sizeof(Elf_Ehdr)) {
 		fprintf(
 			stderr,
 			"\"%s\" is not an ELF binary object\n",
@@ -114,8 +114,8 @@
 static void
 do_load_elf_symtab(struct ltelf *lte) {
 	void *maddr = lte->maddr;
-	Elf32_Ehdr *ehdr = lte->ehdr;
-	Elf32_Shdr *shdr = (Elf32_Shdr *)(maddr + ehdr->e_shoff);
+	Elf_Ehdr *ehdr = lte->ehdr;
+	Elf_Shdr *shdr = (Elf_Shdr *)(maddr + ehdr->e_shoff);
 	int i;
 
 /*
@@ -126,7 +126,7 @@
 
 	for(i = 0; i < ehdr->e_shnum; i++) {
 		if (shdr[i].sh_type == SHT_DYNSYM) {
-			lte->symtab = (Elf32_Sym *)(maddr + shdr[i].sh_offset);
+			lte->symtab = (Elf_Sym *)(maddr + shdr[i].sh_offset);
 			lte->symtab_len = shdr[i].sh_size;
 			lte->strtab = (char *)(
 				maddr + shdr[shdr[i].sh_link].sh_offset
@@ -134,9 +134,9 @@
 		}
 	}
 
-	debug(2, "symtab: 0x%08x", (unsigned)lte->symtab);
+	debug(2, "symtab: 0x%8p", lte->symtab);
 	debug(2, "symtab_len: %lu", lte->symtab_len);
-	debug(2, "strtab: 0x%08x", (unsigned)lte->strtab);
+	debug(2, "strtab: 0x%8p", lte->strtab);
 }
 
 static void
@@ -164,8 +164,8 @@
 	library_symbols->name = &lte->strtab[lte->symtab[i].st_name];
 	library_symbols->next = tmp;
 
-	debug(2, "addr: 0x%08x, symbol: \"%s\"",
-			(unsigned)lte->symtab[i].st_value,
+	debug(2, "addr: 0x%8p, symbol: \"%s\"",
+			lte->symtab[i].st_value,
 			&lte->strtab[lte->symtab[i].st_name]);
 }
 
@@ -203,12 +203,12 @@
 	if (library_num == 0) return 1;
 
 	for (i = 0; i < library_num; i++) {
-		Elf32_Sym *symtab = library_lte[i].symtab;
+		Elf_Sym *symtab = library_lte[i].symtab;
 		char *strtab = library_lte[i].strtab;
 
 		for(
 			j = 0;
-			j < library_lte[i].symtab_len / sizeof(Elf32_Sym);
+			j < library_lte[i].symtab_len / sizeof(Elf_Sym);
 			j++
 		) {
 			if (
@@ -234,8 +234,8 @@
 	do_load_elf_symtab(&lte);
 	do_init_load_libraries();
 
-	for(i = 0; i < lte.symtab_len / sizeof(Elf32_Sym); i++) {
-		Elf32_Sym *symtab = lte.symtab;
+	for(i = 0; i < lte.symtab_len / sizeof(Elf_Sym); i++) {
+		Elf_Sym *symtab = lte.symtab;
 		char *strtab = lte.strtab;
 
 		if (!symtab[i].st_shndx && symtab[i].st_value) {
diff -Nur ltrace-0.3.31.x/elf.h ltrace-0.3.31/elf.h
--- ltrace-0.3.31.x/elf.h	Mon Jul  2 16:53:04 2001
+++ ltrace-0.3.31/elf.h	Thu Nov 20 13:59:59 2003
@@ -4,12 +4,22 @@
 #include <elf.h>
 #include "ltrace.h"
 
+#ifdef __alpha__
+#define	Elf_Ehdr	Elf64_Ehdr
+#define	Elf_Shdr	Elf64_Shdr
+#define	Elf_Sym		Elf64_Sym
+#else
+#define	Elf_Ehdr	Elf32_Ehdr
+#define	Elf_Shdr	Elf32_Shdr
+#define	Elf_Sym		Elf32_Sym
+#endif
+
 struct ltelf {
 	int		fd;
 	void*		maddr;
-	Elf32_Ehdr*	ehdr;
+	Elf_Ehdr*	ehdr;
 	char*		strtab;
-	Elf32_Sym*	symtab;
+	Elf_Sym*	symtab;
 	int		symtab_len;
 };
 
diff -Nur ltrace-0.3.31.x/process_event.c ltrace-0.3.31/process_event.c
--- ltrace-0.3.31.x/process_event.c	Thu Nov 20 10:27:37 2003
+++ ltrace-0.3.31/process_event.c	Thu Nov 20 15:12:18 2003
@@ -221,7 +221,7 @@
 	struct library_symbol * tmp;
 	int i,j;
 
-	debug(2, "event: breakpoint (0x%08x)", event->e_un.brk_addr);
+	debug(2, "event: breakpoint (0x%8p)", event->e_un.brk_addr);
 	if (event->proc->breakpoint_being_enabled) {
 		/* Reinsert breakpoint */
 		continue_enabling_breakpoint(event->proc->pid, event->proc->breakpoint_being_enabled);
@@ -277,8 +277,8 @@
 		}
 		tmp = tmp->next;
 	}
-	output_line(event->proc, "breakpointed at 0x%08x (?)",
-		(unsigned)event->e_un.brk_addr);
+	output_line(event->proc, "breakpointed at 0x%8p (?)",
+		event->e_un.brk_addr);
 	continue_process(event->proc->pid);
 }
 
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/Makefile ltrace-0.3.31/sysdeps/linux-gnu/alpha/Makefile
--- ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/Makefile	Thu Jan  1 01:00:00 1970
+++ ltrace-0.3.31/sysdeps/linux-gnu/alpha/Makefile	Sun Mar  3 02:19:03 2002
@@ -0,0 +1,10 @@
+OBJ	=	trace.o regs.o
+
+all:		arch.o
+
+arch.o:		$(OBJ)
+		$(LD) -r -o arch.o $(OBJ)
+
+clean:
+		$(RM) $(OBJ) arch.o
+
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/arch.h ltrace-0.3.31/sysdeps/linux-gnu/alpha/arch.h
--- ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/arch.h	Thu Jan  1 01:00:00 1970
+++ ltrace-0.3.31/sysdeps/linux-gnu/alpha/arch.h	Thu Nov 20 10:36:50 2003
@@ -0,0 +1,3 @@
+#define BREAKPOINT_VALUE { 0x80, 0x00, 0x00, 0x00 }
+#define BREAKPOINT_LENGTH 4
+#define DECR_PC_AFTER_BREAK 4
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/ptrace.h ltrace-0.3.31/sysdeps/linux-gnu/alpha/ptrace.h
--- ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/ptrace.h	Thu Jan  1 01:00:00 1970
+++ ltrace-0.3.31/sysdeps/linux-gnu/alpha/ptrace.h	Thu Nov 20 10:27:37 2003
@@ -0,0 +1 @@
+#include <sys/ptrace.h>
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/regs.c ltrace-0.3.31/sysdeps/linux-gnu/alpha/regs.c
--- ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/regs.c	Thu Jan  1 01:00:00 1970
+++ ltrace-0.3.31/sysdeps/linux-gnu/alpha/regs.c	Thu Nov 20 11:53:14 2003
@@ -0,0 +1,37 @@
+#if HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <sys/types.h>
+#include <sys/ptrace.h>
+#include <asm/ptrace.h>
+
+#include "ltrace.h"
+
+#if (!defined(PTRACE_PEEKUSER) && defined(PTRACE_PEEKUSR))
+# define PTRACE_PEEKUSER PTRACE_PEEKUSR
+#endif
+
+#if (!defined(PTRACE_POKEUSER) && defined(PTRACE_POKEUSR))
+# define PTRACE_POKEUSER PTRACE_POKEUSR
+#endif
+
+void *
+get_instruction_pointer(struct process * proc) {
+	return (void *)ptrace(PTRACE_PEEKUSER, proc->pid, 64 /* REG_PC */, 0);
+}
+
+void
+set_instruction_pointer(struct process * proc, void * addr) {
+	ptrace(PTRACE_POKEUSER, proc->pid, 64 /* REG_PC */, addr);
+}
+
+void *
+get_stack_pointer(struct process * proc) {
+	return (void *)ptrace(PTRACE_PEEKUSER, proc->pid, 30 /* REG_FP */, 0);
+}
+
+void *
+get_return_addr(struct process * proc, void * stack_pointer) {
+	return (void *)ptrace(PTRACE_PEEKUSER, proc->pid, 26 /* RA */, 0);
+}
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/signalent.h ltrace-0.3.31/sysdeps/linux-gnu/alpha/signalent.h
--- ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/signalent.h	Thu Jan  1 01:00:00 1970
+++ ltrace-0.3.31/sysdeps/linux-gnu/alpha/signalent.h	Fri Feb 19 01:23:06 1999
@@ -0,0 +1,32 @@
+	"SIG_0",	/* 0 */
+	"SIGHUP",	/* 1 */
+	"SIGINT",	/* 2 */
+	"SIGQUIT",	/* 3 */
+	"SIGILL",	/* 4 */
+	"SIGTRAP",	/* 5 */
+	"SIGABRT",	/* 6 */
+	"SIGEMT",	/* 7 */
+	"SIGFPE",	/* 8 */
+	"SIGKILL",	/* 9 */
+	"SIGBUS",	/* 10 */
+	"SIGSEGV",	/* 11 */
+	"SIGSYS",	/* 12 */
+	"SIGPIPE",	/* 13 */
+	"SIGALRM",	/* 14 */
+	"SIGTERM",	/* 15 */
+	"SIGURG",	/* 16 */
+	"SIGSTOP",	/* 17 */
+	"SIGTSTP",	/* 18 */
+	"SIGCONT",	/* 19 */
+	"SIGCHLD",	/* 20 */
+	"SIGTTIN",	/* 21 */
+	"SIGTTOU",	/* 22 */
+	"SIGIO",	/* 23 */
+	"SIGXCPU",	/* 24 */
+	"SIGXFSZ",	/* 25 */
+	"SIGVTALRM",	/* 26 */
+	"SIGPROF",	/* 27 */
+	"SIGWINCH",	/* 28 */
+	"SIGINFO",	/* 29 */
+	"SIGUSR1",	/* 30 */
+	"SIGUSR2",	/* 31 */
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/syscallent.h ltrace-0.3.31/sysdeps/linux-gnu/alpha/syscallent.h
--- ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/syscallent.h	Thu Jan  1 01:00:00 1970
+++ ltrace-0.3.31/sysdeps/linux-gnu/alpha/syscallent.h	Thu Nov 20 11:58:36 2003
@@ -0,0 +1,424 @@
+	"osf_syscall",		/* 0, not implemented */
+	"exit",			/* 1 */
+	"fork",			/* 2 */
+	"read",			/* 3 */
+	"write",		/* 4 */
+	"osf_old_open",		/* 5, not implemented */
+	"close",		/* 6 */
+	"osf_wait4",		/* 7 */
+	"osf_old_creat",	/* 8, not implemented */
+	"link",			/* 9 */
+	"unlink",		/* 10 */
+	"osf_execve",		/* 11, not implemented */
+	"chdir",		/* 12 */
+	"fchdir",		/* 13 */
+	"mknod",		/* 14 */
+	"chmod",		/* 15 */
+	"chown",		/* 16 */
+	"brk",			/* 17 */
+	"osf_getfsstat",	/* 18, not implemented */
+	"lseek",		/* 19 */
+	"getxpid",		/* 20 */
+	"osf_mount",		/* 21 */
+	"umount",		/* 22 */
+	"setuid",		/* 23 */
+	"getxuid",		/* 24 */
+	"exec_with_loader",	/* 25, not implemented */
+	"ptrace",		/* 26 */
+	"osf_nrecmsg",		/* 27, not implemented */
+	"osf_nsendmsg",		/* 28, not implemented */
+	"osf_nrecvfrom",	/* 29, not implemented */
+	"osf_naccept",		/* 30, not implemented */
+	"osf_ngetpeername",	/* 31, not implemented */
+	"osf_ngetsocketname",	/* 32, not implemented */
+	"access",		/* 33 */
+	"osf_chflags",		/* 34, not implemented */
+	"osf_fchflags",		/* 35, not implemented */
+	"sync",			/* 36 */
+	"kill",			/* 37 */
+	"osf_old_stat",		/* 38, not implemented */
+	"setpgid",		/* 39 */
+	"osf_old_lstat",	/* 40, not implemented */
+	"dup",			/* 41 */
+	"pipe",			/* 42 */
+	"osf_set_program_attributes", /* 43 */
+	"osf_profil",		/* 44, not implemented */
+	"open",			/* 45 */
+	"osf_old_sigaction",	/* 46, not implemented */
+	"getxgid",		/* 47 */
+	"osf_sigprocmask",	/* 48 */
+	"osf_getlogin",		/* 49, not implemented */
+	"osf_setlogin",		/* 50, not implemented */
+	"acct",			/* 51 */
+	"sigpending",		/* 52 */
+	"SYS_53",		/* 53 */
+	"ioctl",		/* 54 */
+	"osf_reboot",		/* 55, not implemented */
+	"osf_revoke",		/* 56, not implemented */
+	"symlink",		/* 57 */
+	"readlink",		/* 58 */
+	"execve",		/* 59 */
+	"umask",		/* 60 */
+	"chroot",		/* 61 */
+	"osf_old_fstat",	/* 62, not implemented */
+	"getpgrp",		/* 63 */
+	"getpagesize",		/* 64 */
+	"osf_mremap",		/* 65, not implemented */
+	"vfork",		/* 66 */
+	"stat",			/* 67 */
+	"lstat",		/* 68 */
+	"osf_sbrk",		/* 69, not implemented */
+	"osf_sstk",		/* 70, not implemented */
+	"mmap",			/* 71 */
+	"osf_old_vadvise",	/* 72, not implemented */
+	"munmap",		/* 73 */
+	"mprotect",		/* 74 */
+	"madvise",		/* 75 */
+	"vhangup",		/* 76 */
+	"osf_kmodcall",		/* 77, not implemented */
+	"osf_mincore",		/* 78, not implemented */
+	"getgroups",		/* 79 */
+	"setgroups",		/* 80 */
+	"osf_old_getpgrp",	/* 81, not implemented */
+	"setpgrp",		/* 82 */
+	"osf_setitimer",	/* 83 */
+	"osf_old_wait",		/* 84, not implemented */
+	"osf_table",		/* 85, not implemented */
+	"osf_getitimer",	/* 86 */
+	"gethostname",		/* 87 */
+	"sethostname",		/* 88 */
+	"getdtablesize",	/* 89 */
+	"dup2",			/* 90 */
+	"fstat",		/* 91 */
+	"fcntl",		/* 92 */
+	"osf_select",		/* 93 */
+	"poll",			/* 94 */
+	"fsync",		/* 95 */
+	"setpriority",		/* 96 */
+	"socket",		/* 97 */
+	"connect",		/* 98 */
+	"accept",		/* 99 */
+	"osf_getpriority",	/* 100 */
+	"send",			/* 101 */
+	"recv",			/* 102 */
+	"sigreturn",		/* 103 */
+	"bind",			/* 104 */
+	"setsockopt",		/* 105 */
+	"listen",		/* 106 */
+	"osf_plock",		/* 107, not implemented */
+	"osf_old_sigvec",	/* 108, not implemented */
+	"osf_old_sigblock",	/* 109, not implemented */
+	"osf_old_sigsetmask",	/* 110, not implemented */
+	"sigsuspend",		/* 111 */
+	"sigstack",		/* 112 */
+	"recvmsg",		/* 113 */
+	"sendmsg",		/* 114 */
+	"osf_old_vtrace",	/* 115, not implemented */
+	"osf_gettimeofday",	/* 116 */
+	"osf_getrusage",	/* 117 */
+	"getsockopt",		/* 118 */
+	"SYS_119",		/* 119 */
+	"readv",		/* 120 */
+	"writev",		/* 121 */
+	"osf_settimeofday",	/* 122 */
+	"fchown",		/* 123 */
+	"fchmod",		/* 124 */
+	"recvfrom",		/* 125 */
+	"setreuid",		/* 126 */
+	"setregid",		/* 127 */
+	"rename",		/* 128 */
+	"truncate",		/* 129 */
+	"ftruncate",		/* 130 */
+	"flock",		/* 131 */
+	"setgid",		/* 132 */
+	"sendto",		/* 133 */
+	"shutdown",		/* 134 */
+	"socketpair",		/* 135 */
+	"mkdir",		/* 136 */
+	"rmdir",		/* 137 */
+	"osf_utimes",		/* 138 */
+	"osf_old_sigreturn",	/* 139 */
+	"osf_adjtime",		/* 140, not implemented */
+	"getpeername",		/* 141 */
+	"osf_gethostid",	/* 142, not implemented */
+	"osf_sethostid",	/* 143, not implemented */
+	"getrlimit",		/* 144 */
+	"setrlimit",		/* 145 */
+	"osf_old_killpg",	/* 146, not implemented */
+	"setsid",		/* 147 */
+	"quotactl",		/* 148 */
+	"osf_oldquota",		/* 149, not implemented */
+	"getsockname",		/* 150 */
+	"SYS_151",		/* 151 */
+	"SYS_152",		/* 152 */
+	"osf_pid_block",	/* 153, not implemented */
+	"osf_pid_unblock",	/* 154, not implemented */
+	"SYS_155",		/* 155 */
+	"sigaction",		/* 156 */
+	"osf_sigwaitprim",	/* 157, not implemented */
+	"osf_nfssvc",		/* 158, not implemented */
+	"osf_getdirentries",	/* 159 */
+	"osf_statfs",		/* 160 */
+	"osf_fstatfs",		/* 161 */
+	"SYS_162",		/* 162 */
+	"osf_asynch_daemon",	/* 163, not implemented */
+	"osf_getfh",		/* 164, not implemented */
+	"osf_getdomainname",	/* 165 */
+	"setdomainname",	/* 166 */
+	"SYS_167",		/* 167 */
+	"SYS_168",		/* 168 */
+	"osf_exportfs",		/* 169, not implemented */
+	"SYS_170",		/* 170 */
+	"SYS_171",		/* 171 */
+	"SYS_172",		/* 172 */
+	"SYS_173",		/* 173 */
+	"SYS_174",		/* 174 */
+	"SYS_175",		/* 175 */
+	"SYS_176",		/* 176 */
+	"SYS_177",		/* 177 */
+	"SYS_178",		/* 178 */
+	"SYS_179",		/* 179 */
+	"SYS_180",		/* 180 */
+	"osf_alt_plock",	/* 181, not implemented */
+	"SYS_182",		/* 182 */
+	"SYS_183",		/* 183 */
+	"osf_getmnt",		/* 184, not implemented */
+	"SYS_185",		/* 185 */
+	"SYS_186",		/* 186 */
+	"osf_alt_sigpending",	/* 187, not implemented */
+	"osf_alt_setsid",	/* 188, not implemented */
+	"SYS_189",		/* 189 */
+	"SYS_190",		/* 190 */
+	"SYS_191",		/* 191 */
+	"SYS_192",		/* 192 */
+	"SYS_193",		/* 193 */
+	"SYS_194",		/* 194 */
+	"SYS_195",		/* 195 */
+	"SYS_196",		/* 196 */
+	"SYS_197",		/* 197 */
+	"SYS_198",		/* 198 */
+	"osf_swapon",		/* 199 */
+	"msgctl",		/* 200 */
+	"msgget",		/* 201 */
+	"msgrcv",		/* 202 */
+	"msgsnd",		/* 203 */
+	"semctl",		/* 204 */
+	"semget",		/* 205 */
+	"semop",		/* 206 */
+	"osf_utsname",		/* 207 */
+	"lchown",		/* 208 */
+	"osf_shmat",		/* 209 */
+	"shmctl",		/* 210 */
+	"shmdt",		/* 211 */
+	"shmget",		/* 212 */
+	"osf_mvalid",		/* 213, not implemented */
+	"osf_getaddressconf",	/* 214, not implemented */
+	"osf_msleep",		/* 215, not implemented */
+	"osf_mwakeup",		/* 216, not implemented */
+	"msync",		/* 217 */
+	"osf_signal",		/* 218, not implemented */
+	"osf_utc_gettime",	/* 219, not implemented */
+	"osf_utc_adjtime",	/* 220, not implemented */
+	"SYS_221",		/* 221 */
+	"osf_security",		/* 222, not implemented */
+	"osf_kloadcall",	/* 223, not implemented */
+	"SYS_224",		/* 224 */
+	"SYS_225",		/* 225 */
+	"SYS_226",		/* 226 */
+	"SYS_227",		/* 227 */
+	"SYS_228",		/* 228 */
+	"SYS_229",		/* 229 */
+	"SYS_230",		/* 230 */
+	"SYS_231",		/* 231 */
+	"SYS_232",		/* 232 */
+	"getpgid",		/* 233 */
+	"getsid",		/* 234 */
+	"sigaltstack",		/* 235 */
+	"osf_waitid",		/* 236, not implemented */
+	"osf_priocntlset",	/* 237, not implemented */
+	"osf_sigsendset",	/* 238, not implemented */
+	"osf_set_speculative",	/* 239, not implemented */
+	"osf_msfs_syscall",	/* 240, not implemented */
+	"osf_sysinfo",		/* 241 */
+	"osf_uadmin",		/* 242, not implemented */
+	"osf_fuser",		/* 243, not implemented */
+	"osf_proplist_syscall",	/* 244 */
+	"osf_ntp_adjtime",	/* 245, not implemented */
+	"osf_ntp_gettime",	/* 246, not implemented */
+	"osf_pathconf",		/* 247, not implemented */
+	"osf_fpathconf",	/* 248, not implemented */
+	"SYS_249",		/* 249 */
+	"osf_uswitch",		/* 250, not implemented */
+	"osf_usleep_thread",	/* 251 */
+	"osf_audcntl",		/* 252, not implemented */
+	"osf_audgen",		/* 253, not implemented */
+	"sysfs",		/* 254 */
+	"osf_subsysinfo",	/* 255, not implemented */
+	"osf_getsysinfo",	/* 256 */
+	"osf_setsysinfo",	/* 257 */
+	"osf_afs_syscall",	/* 258, not implemented */
+	"osf_swapctl",		/* 259, not implemented */
+	"osf_memcntl",		/* 260, not implemented */
+	"osf_fdatasync",	/* 261, not implemented */
+	"SYS_262",		/* 262 */
+	"SYS_263",		/* 263 */
+	"SYS_264",		/* 264 */
+	"SYS_265",		/* 265 */
+	"SYS_266",		/* 266 */
+	"SYS_267",		/* 267 */
+	"SYS_268",		/* 268 */
+	"SYS_269",		/* 269 */
+	"SYS_270",		/* 270 */
+	"SYS_271",		/* 271 */
+	"SYS_272",		/* 272 */
+	"SYS_273",		/* 273 */
+	"SYS_274",		/* 274 */
+	"SYS_275",		/* 275 */
+	"SYS_276",		/* 276 */
+	"SYS_277",		/* 277 */
+	"SYS_278",		/* 278 */
+	"SYS_279",		/* 279 */
+	"SYS_280",		/* 280 */
+	"SYS_281",		/* 281 */
+	"SYS_282",		/* 282 */
+	"SYS_283",		/* 283 */
+	"SYS_284",		/* 284 */
+	"SYS_285",		/* 285 */
+	"SYS_286",		/* 286 */
+	"SYS_287",		/* 287 */
+	"SYS_288",		/* 288 */
+	"SYS_289",		/* 289 */
+	"SYS_290",		/* 290 */
+	"SYS_291",		/* 291 */
+	"SYS_292",		/* 292 */
+	"SYS_293",		/* 293 */
+	"SYS_294",		/* 294 */
+	"SYS_295",		/* 295 */
+	"SYS_296",		/* 296 */
+	"SYS_297",		/* 297 */
+	"SYS_298",		/* 298 */
+	"SYS_299",		/* 299 */
+	"bdflush",		/* 300 */
+	"sethae",		/* 301 */
+	"mount",		/* 302 */
+	"adjtimex32",		/* 303 */
+	"swapoff",		/* 304 */
+	"getdents",		/* 305 */
+	"create_module",	/* 306 */
+	"init_module",		/* 307 */
+	"delete_module",	/* 308 */
+	"get_kernel_syms",	/* 309 */
+	"syslog",		/* 310 */
+	"reboot",		/* 311 */
+	"clone",		/* 312 */
+	"uselib",		/* 313 */
+	"mlock",		/* 314 */
+	"munlock",		/* 315 */
+	"mlockall",		/* 316 */
+	"munlockall",		/* 317 */
+	"sysinfo",		/* 318 */
+	"sysctl",		/* 319 */
+	"idle",			/* 320 */
+	"oldumount",		/* 321 */
+	"swapon",		/* 322 */
+	"times",		/* 323 */
+	"personality",		/* 324 */
+	"setfsuid",		/* 325 */
+	"setfsgid",		/* 326 */
+	"ustat",		/* 327 */
+	"statfs",		/* 328 */
+	"fstatfs",		/* 329 */
+	"sched_setparam",	/* 330 */
+	"sched_getparam",	/* 331 */
+	"sched_setscheduler",	/* 332 */
+	"sched_getscheduler",	/* 333 */
+	"sched_yield",		/* 334 */
+	"sched_get_priority_max", /* 335 */
+	"sched_get_priority_min", /* 336 */
+	"sched_rr_get_interval", /* 337 */
+	"afs_syscall",		/* 338 */
+	"uname",		/* 339 */
+	"nanosleep",		/* 340 */
+	"mremap",		/* 341 */
+	"nfsservctl",		/* 342 */
+	"setresuid",		/* 343 */
+	"getresuid",		/* 344 */
+	"pciconfig_read",	/* 345 */
+	"pciconfig_write",	/* 346 */
+	"query_module",		/* 347 */
+	"prctl",		/* 348 */
+	"pread",		/* 349 */
+	"pwrite",		/* 350 */
+	"rt_sigreturn",		/* 351 */
+	"rt_sigaction",		/* 352 */
+	"rt_sigprocmask",	/* 353 */
+	"rt_sigpending",	/* 354 */
+	"rt_sigtimedwait",	/* 355 */
+	"rt_sigqueueinfo",	/* 356 */
+	"rt_sigsuspend",	/* 357 */
+	"select",		/* 358 */
+	"gettimeofday",		/* 359 */
+	"settimeofday",		/* 360 */
+	"getitimer",		/* 361 */
+	"setitimer",		/* 362 */
+	"utimes",		/* 363 */
+	"getrusage",		/* 364 */
+	"wait4",		/* 365 */
+	"adjtimex",		/* 366 */
+	"getcwd",		/* 367 */
+	"capget",		/* 368 */
+	"capset",		/* 369 */
+	"sendfile",		/* 370 */
+	"setresgid",		/* 371 */
+	"getresgid",		/* 372 */
+	"dipc",			/* 373, not implemented */
+	"pivot_root",		/* 374 */
+	"mincore",		/* 375 */
+	"pciconfig_iobase",	/* 376 */
+	"getdents64",		/* 377 */
+	"gettid",		/* 378 */
+	"readahead",		/* 379 */
+	"SYS_380",		/* 380 */
+	"tkill",		/* 381 */
+	"setxattr",		/* 382 */
+	"lsetxattr",		/* 383 */
+	"fsetxattr",		/* 384 */
+	"getxattr",		/* 385 */
+	"lgetxattr",		/* 386 */
+	"fgetxattr",		/* 387 */
+	"listxattr",		/* 388 */
+	"llistxattr",		/* 389 */
+	"flistxattr",		/* 390 */
+	"removexattr",		/* 391 */
+	"lremovexattr",		/* 392 */
+	"fremovexattr",		/* 393 */
+	"futex",		/* 394 */
+	"sched_setaffinity",	/* 395 */
+	"sched_getaffinity",	/* 396 */
+	"tuxcall",		/* 397 */
+	"io_setup",		/* 398 */
+	"io_destroy",		/* 399 */
+	"io_getevents",		/* 400 */
+	"io_submit",		/* 401 */
+	"io_cancel",		/* 402 */
+	"SYS_403",		/* 403 */
+	"SYS_404",		/* 404 */
+	"exit_group",		/* 405 */
+	"lookup_dcookie",	/* 406 */
+	"epoll_create",		/* 407 */
+	"epoll_ctl",		/* 408 */
+	"epoll_wait",		/* 409 */
+	"remap_file_pages",	/* 410 */
+	"set_tid_address",	/* 411 */
+	"restart_syscall",	/* 412 */
+	"fadvise",		/* 413 */
+	"timer_create",		/* 414 */
+	"timer_settime",	/* 415 */
+	"timer_gettime",	/* 416 */
+	"timer_getoverrun",	/* 417 */
+	"timer_delete",		/* 418 */
+	"clock_settime",	/* 419 */
+	"clock_gettime",	/* 420 */
+	"clock_getres",		/* 421 */
+	"clock_nanosleep",	/* 422 */
+	"semtimedop"		/* 423 */
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/trace.c ltrace-0.3.31/sysdeps/linux-gnu/alpha/trace.c
--- ltrace-0.3.31.x/sysdeps/linux-gnu/alpha/trace.c	Thu Jan  1 01:00:00 1970
+++ ltrace-0.3.31/sysdeps/linux-gnu/alpha/trace.c	Thu Nov 20 17:12:50 2003
@@ -0,0 +1,69 @@
+#if HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <sys/types.h>
+#include <sys/wait.h>
+#include <signal.h>
+#include <sys/ptrace.h>
+#include <asm/ptrace.h>
+
+#include "ltrace.h"
+#include "debug.h"
+
+#if (!defined(PTRACE_PEEKUSER) && defined(PTRACE_PEEKUSR))
+# define PTRACE_PEEKUSER PTRACE_PEEKUSR
+#endif
+
+#if (!defined(PTRACE_POKEUSER) && defined(PTRACE_POKEUSR))
+# define PTRACE_POKEUSER PTRACE_POKEUSR
+#endif
+
+void get_arch_dep(struct process *proc)
+{
+}
+
+/* Returns 1 if syscall, 2 if sysret, 0 otherwise.
+ */
+int
+syscall_p(struct process * proc, int status, int * sysnum) {
+	if (WIFSTOPPED(status) && WSTOPSIG(status)==SIGTRAP) {
+		char *ip=get_instruction_pointer(proc) - 4;
+		long x = ptrace(PTRACE_PEEKTEXT, proc->pid, ip, 0);
+		debug(2, "instr: %016lx", x);
+		if((x & 0xffffffff) != 0x00000083)
+			return 0;
+		*sysnum = ptrace(PTRACE_PEEKUSER, proc->pid, 0 /* REG_R0 */, 0);
+		if (proc->callstack_depth > 0 && proc->callstack[proc->callstack_depth-1].is_syscall) {
+			return 2;
+		}
+		if (*sysnum>=0 && *sysnum<500) {
+			return 1;
+		}
+	}
+	return 0;
+}
+
+long
+gimme_arg(enum tof type, struct process * proc, int arg_num) {
+	if (arg_num==-1) {		/* return value */
+		return ptrace(PTRACE_PEEKUSER, proc->pid, 0 /* REG_R0 */, 0);
+	}
+
+	if (type==LT_TOF_FUNCTION || type==LT_TOF_FUNCTIONR) {
+		if(arg_num <= 5)
+			return ptrace(PTRACE_PEEKUSER, proc->pid, arg_num + 16 /* REG_A0 */, 0);
+		else
+			return ptrace(PTRACE_PEEKTEXT, proc->pid, proc->stack_pointer+8*(arg_num-6), 0);
+	} else if (type==LT_TOF_SYSCALL || type==LT_TOF_SYSCALLR) {
+		return ptrace(PTRACE_PEEKUSER, proc->pid, arg_num + 16 /* REG_A0 */, 0);
+	} else {
+		fprintf(stderr, "gimme_arg called with wrong arguments\n");
+		exit(1);
+	}
+	return 0;
+}
+  
+void save_register_args(enum tof type, struct process * proc)
+{
+}
diff -Nur ltrace-0.3.31.x/sysdeps/linux-gnu/breakpoint.c ltrace-0.3.31/sysdeps/linux-gnu/breakpoint.c
--- ltrace-0.3.31.x/sysdeps/linux-gnu/breakpoint.c	Sun Mar  3 02:25:55 2002
+++ ltrace-0.3.31/sysdeps/linux-gnu/breakpoint.c	Thu Nov 20 14:47:00 2003
@@ -14,7 +14,7 @@
 	int i,j;
 
 	if (opt_d>1) {
-		output_line(0, "enable_breakpoint(%d,0x%08x)", pid, sbp->addr);
+		output_line(0, "enable_breakpoint(%d,0x%8p)", pid, sbp->addr);
 	}
 
 	for(i=0; i < 1+((BREAKPOINT_LENGTH-1)/sizeof(long)); i++) {
@@ -34,7 +34,7 @@
 	int i,j;
 
 	if (opt_d>1) {
-		output_line(0, "disable_breakpoint(%d,0x%08x)", pid, sbp->addr);
+		output_line(0, "disable_breakpoint(%d,0x%8p)", pid, sbp->addr);
 	}
 
 	for(i=0; i < 1+((BREAKPOINT_LENGTH-1)/sizeof(long)); i++) {
